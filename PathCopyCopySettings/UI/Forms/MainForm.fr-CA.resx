<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyBtn.Text" xml:space="preserve">
    <value>&amp;Appliquer</value>
  </data>
  <data name="ApplyBtn.ToolTip" xml:space="preserve">
    <value>Sauvegarder les changements effectués jusqu'à maintenant, mais conserver cette fenêtre ouverte</value>
  </data>
  <data name="OKBtn.ToolTip" xml:space="preserve">
    <value>Sauvegardes les changements à la configuration et fermer cette fenêtre</value>
  </data>
  <data name="CancelBtn.Text" xml:space="preserve">
    <value>A&amp;nnuler</value>
  </data>
  <data name="CancelBtn.ToolTip" xml:space="preserve">
    <value>Annuler les changements effectués jusqu'à maintenant et fermer cette fenêtre</value>
  </data>
  <data name="PluginsPage.Text" xml:space="preserve">
    <value>Commandes</value>
  </data>
  <data name="DuplicatePipelinePluginBtn.Text" xml:space="preserve">
    <value>Dup&amp;liquer</value>
  </data>
  <data name="DuplicatePipelinePluginBtn.ToolTip" xml:space="preserve">
    <value>Créer une copie de la commande personnalisée sélectionnée</value>
  </data>
  <data name="AddSeparatorBtn.Text" xml:space="preserve">
    <value>&amp;Séparateur</value>
  </data>
  <data name="AddSeparatorBtn.ToolTip" xml:space="preserve">
    <value>Insérer un séparateur après la commande sélectionnée</value>
  </data>
  <data name="ImportPipelinePluginsBtn.Text" xml:space="preserve">
    <value>&amp;Importer...</value>
  </data>
  <data name="ImportPipelinePluginsBtn.ToolTip" xml:space="preserve">
    <value>Importer des commandes personnalisées à partir d'un fichier sur disque</value>
  </data>
  <data name="ExportPipelinePluginsBtn.Text" xml:space="preserve">
    <value>Ex&amp;porter...</value>
  </data>
  <data name="ExportPipelinePluginsBtn.ToolTip" xml:space="preserve">
    <value>Exporter les commandes personnalisées sélectionnées dans un fichier sur disque</value>
  </data>
  <data name="RemovePluginBtn.Text" xml:space="preserve">
    <value>E&amp;ffacer</value>
  </data>
  <data name="RemovePluginBtn.ToolTip" xml:space="preserve">
    <value>Effacer la commande personnalisée ou le séparateur sélectionné</value>
  </data>
  <data name="EditPipelinePluginBtn.Text" xml:space="preserve">
    <value>&amp;Éditer...</value>
  </data>
  <data name="EditPipelinePluginBtn.ToolTip" xml:space="preserve">
    <value>Modifier la commande personnalisée sélectionnée</value>
  </data>
  <data name="AddPipelinePluginBtn.Text" xml:space="preserve">
    <value>Nou&amp;veau...</value>
  </data>
  <data name="AddPipelinePluginBtn.ToolTip" xml:space="preserve">
    <value>Créer une nouvelle commande personnalisée</value>
  </data>
  <data name="MovePluginDownBtn.Text" xml:space="preserve">
    <value>&amp;Descendre</value>
  </data>
  <data name="MovePluginDownBtn.ToolTip" xml:space="preserve">
    <value>Déplacer la commander sélectionnée d'une position vers le bas</value>
  </data>
  <data name="MovePluginUpBtn.Text" xml:space="preserve">
    <value>&amp;Monter</value>
  </data>
  <data name="MovePluginUpBtn.ToolTip" xml:space="preserve">
    <value>Déplacer la commande sélectionnée d'une position vers le haut</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PluginsExplanationLbl2.Size" type="System.Drawing.Size, System.Drawing">
    <value>421, 13</value>
  </data>
  <data name="PluginsExplanationLbl2.Text" xml:space="preserve">
    <value>ainsi que dans notre sous-menu, ainsi qu'ajouter, enlever ou réordonner les commandes.</value>
  </data>
  <data name="IconCol.HeaderText" xml:space="preserve">
    <value>Icône</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="IconCol.Width" type="System.Int32, mscorlib">
    <value>40</value>
  </data>
  <data name="PluginCol.HeaderText" xml:space="preserve">
    <value>Commande</value>
  </data>
  <data name="InMainMenuCol.HeaderText" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="InMainMenuCol.Width" type="System.Int32, mscorlib">
    <value>40</value>
  </data>
  <data name="InSubmenuCol.HeaderText" xml:space="preserve">
    <value>Sous-menu</value>
  </data>
  <data name="InSubmenuCol.Width" type="System.Int32, mscorlib">
    <value>66</value>
  </data>
  <data name="PluginsExplanationLbl.Size" type="System.Drawing.Size, System.Drawing">
    <value>450, 13</value>
  </data>
  <data name="PluginsExplanationLbl.Text" xml:space="preserve">
    <value>Ici, vous pouvez choisir quelles commandes sont affichées dans le menu contextuel d'Explorer</value>
  </data>
  <data name="MiscOptionsPage.Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="LanguageCombo.Location" type="System.Drawing.Point, System.Drawing">
    <value>58, 492</value>
  </data>
  <data name="LanguageCombo.Size" type="System.Drawing.Size, System.Drawing">
    <value>366, 21</value>
  </data>
  <data name="LanguageCombo.ToolTip" xml:space="preserve">
    <value>Langue de l'application</value>
  </data>
  <data name="LanguageLbl.Size" type="System.Drawing.Size, System.Drawing">
    <value>46, 13</value>
  </data>
  <data name="LanguageLbl.Text" xml:space="preserve">
    <value>Lan&amp;gue:</value>
  </data>
  <data name="TrueLnkPathsChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>319, 17</value>
  </data>
  <data name="TrueLnkPathsChk.Text" xml:space="preserve">
    <value>Copier les chemins des fichiers de raccourcis (.ln&amp;k) eux-mêmes</value>
  </data>
  <data name="TrueLnkPathsChk.ToolTip" xml:space="preserve">
    <value>Lors de la copie du chemin d'un fichier de raccourci (.lnk), copier le chemin du fichier de raccourci lui-même au lieu de copier le chemin vers sa cible</value>
  </data>
  <data name="UsePreviewModeInMainMenuChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>185, 17</value>
  </data>
  <data name="UsePreviewModeInMainMenuChk.Text" xml:space="preserve">
    <value>...ainsi que dans le menu prin&amp;cipal</value>
  </data>
  <data name="UsePreviewModeInMainMenuChk.ToolTip" xml:space="preserve">
    <value>Afficher des aperçus pour les commandes dans le menu contextuel principal également</value>
  </data>
  <data name="AppendSepForDirChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>256, 17</value>
  </data>
  <data name="AppendSepForDirChk.Text" xml:space="preserve">
    <value>Ajouter un sépa&amp;rateur aux chemins de répertoires</value>
  </data>
  <data name="AppendSepForDirChk.ToolTip" xml:space="preserve">
    <value>Quand le chemin copié pointe vers un répertoire, ajouter un séparateur (i.e. \ ou / ) à la fin du chemin</value>
  </data>
  <data name="UseFQDNChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>353, 17</value>
  </data>
  <data name="UseFQDNChk.Text" xml:space="preserve">
    <value>Utiliser des noms de &amp;domaines complets pour copier les chemins UNC</value>
  </data>
  <data name="UseFQDNChk.ToolTip" xml:space="preserve">
    <value>Utiliser des noms de domaines complets (FQDN en anglais) pour copier les chemins UNC</value>
  </data>
  <data name="AreQuotesOptionalChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>224, 17</value>
  </data>
  <data name="AreQuotesOptionalChk.Text" xml:space="preserve">
    <value>...seulement s'ils contiennent des e&amp;spaces</value>
  </data>
  <data name="AreQuotesOptionalChk.ToolTip" xml:space="preserve">
    <value>Détermine si les chemins seront entourés de guillemets uniquement s'ils contiennent des espaces</value>
  </data>
  <data name="CtrlKeyPluginCombo.ToolTip" xml:space="preserve">
    <value>Commande à utiliser automatiquement quand la touche Ctrl est maintenue enfoncée à l'ouverture du menu contextuel d'Explorer</value>
  </data>
  <data name="CtrlKeyPluginChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>419, 17</value>
  </data>
  <data name="CtrlKeyPluginChk.Text" xml:space="preserve">
    <value>Quand la touche Ctrl est en&amp;foncée lors de l'ouverture du menu, utiliser la commande</value>
  </data>
  <data name="CtrlKeyPluginChk.ToolTip" xml:space="preserve">
    <value>Choisir une commande à utiliser automatiquement quand le menu contextuel d'Explorer est ouvert alors que la touche Ctrl est maintenue enfoncée</value>
  </data>
  <data name="EncodeURICharsChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>320, 17</value>
  </data>
  <data name="EncodeURICharsChk.Text" xml:space="preserve">
    <value>...ainsi que tous les caractères in&amp;valides dans un URI (i.e. %xx)</value>
  </data>
  <data name="EncodeURICharsChk.ToolTip" xml:space="preserve">
    <value>Remplacer tous les caractères dans les chemins qui sont invalides dans un URI par de l'encodage en pourcentage ( %xx )</value>
  </data>
  <data name="EncodeURIWhitespaceChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>344, 17</value>
  </data>
  <data name="EncodeURIWhitespaceChk.Text" xml:space="preserve">
    <value>Encoder les es&amp;paces à l'aide d'encodage en pourcentage (i.e. %20)</value>
  </data>
  <data name="EncodeURIWhitespaceChk.ToolTip" xml:space="preserve">
    <value>Remplacer tous les espaces dans les chemins par %20</value>
  </data>
  <data name="CopyOnSameLineChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>221, 17</value>
  </data>
  <data name="CopyOnSameLineChk.Text" xml:space="preserve">
    <value>Copier tous les chemins sur la même &amp;ligne</value>
  </data>
  <data name="CopyOnSameLineChk.ToolTip" xml:space="preserve">
    <value>Lors de la copie de plusieurs chemins, les copier tous sur la même ligne (en les séparant avec des espaces) plutôt que de les copier sur des lignes distinctes (séparées par des sauts de lignes)</value>
  </data>
  <data name="DropRedundantWordsChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>443, 17</value>
  </data>
  <data name="DropRedundantWordsChk.Text" xml:space="preserve">
    <value>Ne pas afficher les mots red&amp;ondants comme "Copier" ou "long/court" dans le sous-menu</value>
  </data>
  <data name="DropRedundantWordsChk.ToolTip" xml:space="preserve">
    <value>Laisser tomber certains mots redondants lors de l'affichage des commandes dans le sous-menu</value>
  </data>
  <data name="UsePreviewModeChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>408, 17</value>
  </data>
  <data name="UsePreviewModeChk.Text" xml:space="preserve">
    <value>Afficher des aperç&amp;us au lieu de la description des commandes dans le sous-menu</value>
  </data>
  <data name="UsePreviewModeChk.ToolTip" xml:space="preserve">
    <value>Dans le sous-menu, au lieu d'afficher les commandes normalement, plutôt afficher un aperçu de ce que les chemins copiés auraient l'air si la commande était choisie</value>
  </data>
  <data name="UseIconForSubmenuChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>208, 17</value>
  </data>
  <data name="UseIconForSubmenuChk.Text" xml:space="preserve">
    <value>Afficher un &amp;icône à côté du sous-menu</value>
  </data>
  <data name="UseIconForSubmenuChk.ToolTip" xml:space="preserve">
    <value>Afficher un icône de Path Copy Copy à côté du sous-menu dans le menu contextuel d'Explorer</value>
  </data>
  <data name="EmailLinksChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>346, 17</value>
  </data>
  <data name="EmailLinksChk.Text" xml:space="preserve">
    <value>Entourer les chemins copiés de &lt; et &gt; (pour créer des liens courri&amp;els)</value>
  </data>
  <data name="EmailLinksChk.ToolTip" xml:space="preserve">
    <value>Entourer tous les chemins copiés des caractères &lt; et &gt; (ce qui crée des liens courriels)</value>
  </data>
  <data name="EnableSoftwareUpdateChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>216, 17</value>
  </data>
  <data name="EnableSoftwareUpdateChk.Text" xml:space="preserve">
    <value>Vérifier les mises à &amp;jour automatiquement</value>
  </data>
  <data name="EnableSoftwareUpdateChk.ToolTip" xml:space="preserve">
    <value>Vérifier automatiquement si de nouvelles versions de Path Copy Copy existent et offrir de les installer quand c'est le cas</value>
  </data>
  <data name="AlwaysShowSubmenuChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>170, 17</value>
  </data>
  <data name="AlwaysShowSubmenuChk.Text" xml:space="preserve">
    <value>&amp;Toujours afficher le sous-menu</value>
  </data>
  <data name="AlwaysShowSubmenuChk.ToolTip" xml:space="preserve">
    <value>Toujours afficher le sous-menu de Path Copy Copy dans le menu contextuel d'Explorer (sinon, il faudra maintenir Shift enfoncé pour l'afficher)</value>
  </data>
  <data name="HiddenSharesChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>295, 17</value>
  </data>
  <data name="HiddenSharesChk.Text" xml:space="preserve">
    <value>Utiliser les partages cac&amp;hés pour copier les chemins UNC</value>
  </data>
  <data name="HiddenSharesChk.ToolTip" xml:space="preserve">
    <value>Utiliser les partages cachés (ceux se terminant avec $, incluant les partages administratifs comme \\server\C$) pour copier les chemins UNC</value>
  </data>
  <data name="AddQuotesChk.Size" type="System.Drawing.Size, System.Drawing">
    <value>257, 17</value>
  </data>
  <data name="AddQuotesChk.Text" xml:space="preserve">
    <value>Ajouter des &amp;guillemets autour des chemins copiés</value>
  </data>
  <data name="AddQuotesChk.ToolTip" xml:space="preserve">
    <value>Entourer tous les chemins copiés de guillemets ( " )</value>
  </data>
  <data name="AboutPage.Text" xml:space="preserve">
    <value>À propos</value>
  </data>
  <data name="VisitWebsiteLbl.Text" xml:space="preserve">
    <value>Visitez notre site web:</value>
  </data>
  <data name="LicenseExplanationLbl.Text" xml:space="preserve">
    <value>Path Copy Copy est un logiciel libre distribué sous
la MIT License. Pour plus d'informations, voir</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="DonationLinkLbl.LinkArea" type="System.Windows.Forms.LinkArea, System.Windows.Forms">
    <value>46, 10</value>
  </data>
  <data name="DonationLinkLbl.Text" xml:space="preserve">
    <value>Si vous aimez Path Copy Copy, n'hésitez pas à CONTRIBUER via PayPal!
Les dons aident à financer le développement et à fournir du support.</value>
  </data>
  <data name="ExportPipelinePluginsSaveDlg.Filter" xml:space="preserve">
    <value>Commandes personnalisées exportées (*.eccv3)|*.eccv3|Commandes personnalisées exportées (pré-17.1) (*.ecc)|*.ecc|Commandes personnalisées exportées (pré-12.0) (*.pccpp)|*.pccpp</value>
  </data>
  <data name="ImportPipelinePluginsOpenDlg.Filter" xml:space="preserve">
    <value>Commandes personnalisées exportées (*.eccv3;*.ecc;*.pccpp)|*.eccv3;*.ecc;*.pccpp</value>
  </data>
  <data name="ChoosePluginIconOpenDlg.Filter" xml:space="preserve">
    <value>Fichiers d'images (*.bmp;*.jpg;*.gif;*.png;*.ico)|*.bmp;*.jpg;*.gif;*.png;*.ico|Tous les fichiers (*.*)|*.*</value>
  </data>
  <data name="ExportUserSettingsSaveDlg.Filter" xml:space="preserve">
    <value>Configuration exportée (*.reg)|*.reg</value>
  </data>
  <data name="ExportUserSettingsBtn.Size" type="System.Drawing.Size, System.Drawing">
    <value>162, 23</value>
  </data>
  <data name="ExportUserSettingsBtn.Text" xml:space="preserve">
    <value>E&amp;xporter la configuration...</value>
  </data>
  <data name="ExportUserSettingsBtn.ToolTip" xml:space="preserve">
    <value>Exporter la configuration dans un fichier sur disque</value>
  </data>
</root>